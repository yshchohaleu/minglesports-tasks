// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minglesports.Tasks.Providers.Entities;

namespace Minglesports.Tasks.Providers.Migrations
{
    [DbContext(typeof(TodoListDbContext))]
    partial class TodoListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Minglesports.Tasks.Core.Domain.TodoListAggregate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("Minglesports.Tasks.Core.Domain.TodoListAggregate", b =>
                {
                    b.OwnsOne("Minglesports.Tasks.Core.Domain.ValueObjects.TodoListId", "EntityId", b1 =>
                        {
                            b1.Property<long>("TodoListAggregateId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("EntityId");

                            b1.HasKey("TodoListAggregateId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[EntityId] IS NOT NULL");

                            b1.ToTable("TodoLists");

                            b1.WithOwner()
                                .HasForeignKey("TodoListAggregateId");
                        });

                    b.OwnsMany("Minglesports.Tasks.Core.Domain.TaskEntity", "Tasks", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreateAtUtc")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DeadlineUtc")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<long>("TodoListId")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("TodoListId");

                            b1.ToTable("Tasks");

                            b1.WithOwner()
                                .HasForeignKey("TodoListId");

                            b1.OwnsOne("Minglesports.Tasks.Core.Domain.ValueObjects.TaskId", "EntityId", b2 =>
                                {
                                    b2.Property<long>("TaskEntityId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<Guid>("Value")
                                        .HasMaxLength(100)
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("EntityId");

                                    b2.HasKey("TaskEntityId");

                                    b2.ToTable("Tasks");

                                    b2.WithOwner()
                                        .HasForeignKey("TaskEntityId");
                                });

                            b1.OwnsOne("Minglesports.Tasks.Core.Domain.ValueObjects.TaskName", "Name", b2 =>
                                {
                                    b2.Property<long>("TaskEntityId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Name");

                                    b2.HasKey("TaskEntityId");

                                    b2.ToTable("Tasks");

                                    b2.WithOwner()
                                        .HasForeignKey("TaskEntityId");
                                });

                            b1.Navigation("EntityId");

                            b1.Navigation("Name");
                        });

                    b.Navigation("EntityId");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
